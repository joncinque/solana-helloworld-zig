name: Main

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

env:
  SOLANA_ZIG_VERSION: v1.47.0
  SOLANA_ZIG_DIR: solana-zig

jobs:
  unit-test:
    name: Unit tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: |
          $SOLANA_ZIG_DIR
        key: solana-zig-${{ hashFiles('./program-test/Cargo.lock') }}-$SOLANA_ZIG_VERSION

    - name: Download solana-zig compiler
      shell: bash
      run: SOLANA_ZIG_VERSION=$SOLANA_ZIG_VERSION ./install-solana-zig.sh $SOLANA_ZIG_DIR

    - name: Test program
      shell: bash
      run: |
        $SOLANA_ZIG_DIR/zig build test --summary all --verbose

  integration-test:
    name: Integration tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/zig
          $SOLANA_ZIG_DIR
        key: solana-zig-${{ hashFiles('./program-test/Cargo.lock') }}-$SOLANA_ZIG_VERSION

    - name: Download solana-zig compiler
      shell: bash
      run: SOLANA_ZIG_VERSION=$SOLANA_ZIG_VERSION ./install-solana-zig.sh $SOLANA_ZIG_DIR

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.86.0

    # took the workaround from https://github.com/sfackler/rust-openssl/issues/2149
    - name: Set Perl environment variables
      if: runner.os == 'Windows'
      run: |
        echo "PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        echo "OPENSSL_SRC_PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

    - name: Setup openssl on Windows
      if: runner.os == 'Windows'
      shell: bash
      run: |
        cat > vcpkg.json <<EOL
        {
          "dependencies": ["openssl"],
          "overrides": [
            {
              "name": "openssl",
              "version": "3.4.1"
            }
          ],
          "builtin-baseline": "5ee5eee0d3e9c6098b24d263e9099edcdcef6631"
        }
        EOL
        vcpkg install --triplet x64-windows-static-md
        rm vcpkg.json
        echo "OPENSSL_LIB_DIR=$PWD/vcpkg_installed/x64-windows-static-md/lib" >> $GITHUB_ENV
        echo "OPENSSL_INCLUDE_DIR=$PWD/vcpkg_installed/x64-windows-static-md/include" >> $GITHUB_ENV

    - name: Install build deps
      shell: bash
      run: ./install-rust-build-deps.sh

    - name: Build and test program
      shell: bash
      run: ./program-test/test.sh

  cli-test:
    name: CLI tests
    if: false
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/zig
          $SOLANA_ZIG_DIR
        key: solana-zig-${{ hashFiles('./cli/Cargo.lock') }}-$SOLANA_ZIG_VERSION

    - name: Download solana-zig compiler
      shell: bash
      run: SOLANA_ZIG_VERSION=$SOLANA_ZIG_VERSION ./install-solana-zig.sh $SOLANA_ZIG_DIR

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.86.0

    - name: Install Rust build deps
      shell: bash
      run: ./install-rust-build-deps.sh

    - name: Build and test program
      shell: bash
      run: ./cli/test.sh
